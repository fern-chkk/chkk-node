/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Identity } from "./api/resources/identity/client/Client";
import { Subscription } from "./api/resources/subscription/client/Client";
import { Internal } from "./api/resources/internal/client/Client";
import { Cluster } from "./api/resources/cluster/client/Client";
import { ScanManagement } from "./api/resources/scanManagement/client/Client";
import { LarStatus } from "./api/resources/larStatus/client/Client";
import { Scan } from "./api/resources/scan/client/Client";
import { Integration } from "./api/resources/integration/client/Client";
import { IntegrationDataPlane } from "./api/resources/integrationDataPlane/client/Client";
import { Agent } from "./api/resources/agent/client/Client";

export declare namespace ChkkClient {
    interface Options {
        environment: environments.ChkkEnvironment | string;
        apiKey?: core.Supplier<string>;
    }
}

export class ChkkClient {
    constructor(private readonly options: ChkkClient.Options) {}

    private _identity: Identity | undefined;

    public get identity(): Identity {
        return (this._identity ??= new Identity(this.options));
    }

    private _subscription: Subscription | undefined;

    public get subscription(): Subscription {
        return (this._subscription ??= new Subscription(this.options));
    }

    private _internal: Internal | undefined;

    public get internal(): Internal {
        return (this._internal ??= new Internal(this.options));
    }

    private _cluster: Cluster | undefined;

    public get cluster(): Cluster {
        return (this._cluster ??= new Cluster(this.options));
    }

    private _scanManagement: ScanManagement | undefined;

    public get scanManagement(): ScanManagement {
        return (this._scanManagement ??= new ScanManagement(this.options));
    }

    private _larStatus: LarStatus | undefined;

    public get larStatus(): LarStatus {
        return (this._larStatus ??= new LarStatus(this.options));
    }

    private _scan: Scan | undefined;

    public get scan(): Scan {
        return (this._scan ??= new Scan(this.options));
    }

    private _integration: Integration | undefined;

    public get integration(): Integration {
        return (this._integration ??= new Integration(this.options));
    }

    private _integrationDataPlane: IntegrationDataPlane | undefined;

    public get integrationDataPlane(): IntegrationDataPlane {
        return (this._integrationDataPlane ??= new IntegrationDataPlane(this.options));
    }

    private _agent: Agent | undefined;

    public get agent(): Agent {
        return (this._agent ??= new Agent(this.options));
    }
}
