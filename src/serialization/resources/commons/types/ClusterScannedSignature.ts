/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Chkk } from "@fern-api/chkk";
import * as core from "../../../../core";

export const ClusterScannedSignature: core.serialization.ObjectSchema<
    serializers.ClusterScannedSignature.Raw,
    Chkk.ClusterScannedSignature
> = core.serialization.object({
    signatureId: core.serialization.property("signature_id", core.serialization.string()),
    severity: core.serialization.lazy(async () => (await import("../../..")).Severity),
    availabilityImpact: core.serialization.property("availability_impact", core.serialization.string()),
    title: core.serialization.string(),
    url: core.serialization.string(),
    detected: core.serialization.boolean(),
    labels: core.serialization.list(core.serialization.lazy(async () => (await import("../../..")).SignatureLabel)),
});

export declare namespace ClusterScannedSignature {
    interface Raw {
        signature_id: string;
        severity: serializers.Severity.Raw;
        availability_impact: string;
        title: string;
        url: string;
        detected: boolean;
        labels: serializers.SignatureLabel.Raw[];
    }
}
