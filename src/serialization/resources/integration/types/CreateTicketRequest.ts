/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Chkk } from "@fern-api/chkk";
import * as core from "../../../../core";

export const CreateTicketRequest: core.serialization.ObjectSchema<
    serializers.CreateTicketRequest.Raw,
    Chkk.CreateTicketRequest
> = core.serialization.object({
    summary: core.serialization.string(),
    description: core.serialization.string(),
    assigneeName: core.serialization.property("assignee_name", core.serialization.string()),
    assigneeEmail: core.serialization.property("assignee_email", core.serialization.string()),
    reporterName: core.serialization.property("reporter_name", core.serialization.string()),
    reporterEmail: core.serialization.property("reporter_email", core.serialization.string()),
    issueType: core.serialization.property("issue_type", core.serialization.string()),
    priority: core.serialization.string(),
    larId: core.serialization.property("lar_id", core.serialization.string()),
    clusterId: core.serialization.property("cluster_id", core.serialization.string()),
    clusterName: core.serialization.property("cluster_name", core.serialization.string()),
    clusterType: core.serialization.property("cluster_type", core.serialization.string()),
    clusterVersion: core.serialization.property("cluster_version", core.serialization.string()),
    larDetails: core.serialization.property("lar_details", core.serialization.string()),
    larCategory: core.serialization.property("lar_category", core.serialization.string()),
    affectedResources: core.serialization.property(
        "affected_resources",
        core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).CreateTicketRequestAffectedResource)
        )
    ),
});

export declare namespace CreateTicketRequest {
    interface Raw {
        summary: string;
        description: string;
        assignee_name: string;
        assignee_email: string;
        reporter_name: string;
        reporter_email: string;
        issue_type: string;
        priority: string;
        lar_id: string;
        cluster_id: string;
        cluster_name: string;
        cluster_type: string;
        cluster_version: string;
        lar_details: string;
        lar_category: string;
        affected_resources: serializers.CreateTicketRequestAffectedResource.Raw[];
    }
}
