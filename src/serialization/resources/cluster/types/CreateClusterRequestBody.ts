/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Chkk } from "@fern-api/chkk";
import * as core from "../../../../core";

export const CreateClusterRequestBody: core.serialization.ObjectSchema<
    serializers.CreateClusterRequestBody.Raw,
    Chkk.CreateClusterRequestBody
> = core.serialization.object({
    name: core.serialization.string().optional(),
    internalK8SRef: core.serialization.property("internal_k8s_ref", core.serialization.string()),
    region: core.serialization.string(),
    production: core.serialization.boolean().optional(),
    version: core.serialization.string(),
    nodeCount: core.serialization.property("node_count", core.serialization.number()),
    managedNgCount: core.serialization.property("managed_ng_count", core.serialization.number()),
    selfManagedNgCount: core.serialization.property("self_managed_ng_count", core.serialization.number()),
    containerRuntimes: core.serialization.property(
        "container_runtimes",
        core.serialization.list(core.serialization.string())
    ),
    labels: core.serialization.record(
        core.serialization.string(),
        core.serialization.lazy(async () => (await import("../../..")).ClusterRequestTypeString).optional()
    ),
    cloudProvider: core.serialization.property(
        "cloud_provider",
        core.serialization.lazy(async () => (await import("../../..")).KubernetesProvider)
    ),
    chkkMetadata: core.serialization.property(
        "chkk_metadata",
        core.serialization.lazyObject(async () => (await import("../../..")).ChkkAgent)
    ),
});

export declare namespace CreateClusterRequestBody {
    interface Raw {
        name?: string | null;
        internal_k8s_ref: string;
        region: string;
        production?: boolean | null;
        version: string;
        node_count: number;
        managed_ng_count: number;
        self_managed_ng_count: number;
        container_runtimes: string[];
        labels: Record<string, serializers.ClusterRequestTypeString.Raw | null | undefined>;
        cloud_provider: serializers.KubernetesProvider.Raw;
        chkk_metadata: serializers.ChkkAgent.Raw;
    }
}
